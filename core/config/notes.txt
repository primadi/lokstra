Aturan yaml config :

1. Level paling atas : (routers, servers, services, middlewares)
2. config bisa berasal dari Multi file dan merge, aturannya sederhana,
   misal paling atas routers, dibawahnya menambah router baru, dst.

contoh :

routers:
  - name: blog-app-router
    engine-type: default // can be skipped
    enable: true // this is default value, can be skip
    use: [mw1, mw2]
    override-parent-mw : false // this is default value
    routes:
      - name: ping
        path: /ping
        enable: true // this is default value, can be skip
        methos: GET // this is default method, we can skip it for GET method
        override-parent-mw: False // this is default value
        use: [mw3, me4]
  - name: blog-admin-router
    ...
  - name: blog-backend-router
    ...

services:
  - name: db-main  // programmer can access service from DI using name
    type: dbpool  // service factory to create service
    enable: true // this is default value, can be skip
    config: // can be different between service
      dsn: ....

middlewares:
  - name: admin-mw // programmerf can access middleware from DI using name
    type: cors
    enable: true // this is default value, can be skip
    config:
      - allow_domain: [mydomain.com]

  - name: blog-mw // programmerf can access middleware from DI using name
    type: cors
    enable: true // this is default value, can be skip
    config:
      - allow_domain: [myblogdomain.com]

servers:
  - name: monolith
    description: monolith server, all apps in one server
    services: [db-main]
    apps:
      - name: monolith-app
        addr: ":8080"
        listener-type: default // default value
        routers : [blog-app-router, blog-admin-router, blog-backend-router]

  - name: blog-app-server
    description. blog-app-service
    services: [db-main]
    apps:
      - name: blog-app-service
        addr: ":8080"
        routers: [blog-app-router]
        reverse-proxies:
          - path: /api
            strip-prefix: ""  // default value
            target: http://blog-backend:8080

  - name: blog-admin-server
    description. blog-admin-service
    services: [db-main]
    apps:
      - name: blog-admin-service
        addr: ":8080"
        routers: [blog-admin-router]
        reverse-proxies:
          - path: /api
            strip-prefix: ""  // default value
            target: http://blog-backend:8080

  - name: blog-backend-server
    description. blog-backend-service
    services: [db-main]
    apps:
      - name: blog-backend-service
        addr: ":8080"
        routers: [blog-backend-router]
