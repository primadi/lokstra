# yaml-language-server: $schema=../../../core/config/lokstra.json

# =============================================================================
# LOKSTRA YAML CONFIGURATION - 05-config Learning Example
# =============================================================================
# This example demonstrates the 4 main sections of Lokstra config:
# 1. configs     - General key-value configurations
# 2. services    - Lazy-loaded services (created on first GetService call)
# 3. middlewares - Named middleware with configuration
# 4. servers     - Server definitions with apps and routers
# =============================================================================

# 1. CONFIGS - General configuration (accessible via lokstra_registry.GetConfig)
configs:
  - name: app-name
    value: "Learning Config Demo"
  - name: app-version
    value: "1.0.0"
  - name: environment
    value: ${ENV:development}

# 2. SERVICES - Lazy-loaded services
# Services are created only when first accessed via lokstra_registry.GetService()
# 'name' = service identifier, 'type' = factory name (if empty, uses 'name')
# For this learning example, we skip services (empty array)
services: []
  # To add a service, first register its factory:
  #   lokstra_registry.RegisterServiceFactory("service-type", factoryFunc)
  # Then define it here:
  # - name: my_service
  #   type: service-type
  #   config:
  #     key: value

# 3. MIDDLEWARES - Named middleware with configuration
# 'name' = middleware identifier, 'type' = factory name (if empty, uses 'name')
# Can be applied via:
#   - router.Use("middleware-name")
#   - router.GET(path, handler, "middleware-name")
middlewares:
  - name: cors
    type: cors
    enable: true
    config:
      allow_origins:
        - "*"

  - name: request_logger
    type: request_logger
    enable: true
    config:
      log_body: false
      log_headers: false

  - name: recovery
    type: recovery
    enable: true
    config:
      stack_trace: true

# 4. SERVERS - Server definitions
# Only ONE server runs at a time (selected via lokstra_registry.SetCurrentServerName)
# Routers are registered in code via lokstra_registry.RegisterRouter()
servers:
  - name: dev-server
    baseUrl: http://localhost
    deployment-id: development
    apps:
      - addr: ":8080"
        routers: [api-router]


