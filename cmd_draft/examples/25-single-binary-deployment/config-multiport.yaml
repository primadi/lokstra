# Monolith Multiport Deployment Configuration
# All services in one process, but listening on multiple ports
# Best for: Staging, logical component separation

configs:
  - name: app_name
    value: "E-Commerce Multiport"
  - name: deployment_mode
    value: "multiport"

# Same service definitions
services:
  - name: user-service
    type: user_service
    config:
      storage: memory
      
  - name: auth-service
    type: auth_service
    depends-on: [user-service]
    config:
      jwt_secret: dev-secret-key
      token_expiry: 3600

  - name: order-service
    type: order_service
    depends-on: [user-service, payment-service]
    config:
      storage: memory
      max_items_per_order: 100
    
  - name: cart-service
    type: cart_service
    depends-on: [user-service]
    config:
      storage: memory
      session_timeout: 1800

  - name: payment-service
    type: payment_service
    depends-on: [user-service]
    config:
      storage: memory
      currency: USD
    
  - name: invoice-service
    type: invoice_service
    depends-on: [payment-service]
    config:
      storage: memory

middlewares:
  - name: logger
    type: request_logger
    config:
      format: "json"
      log_level: "info"

# Multiple servers (all run in same process)
servers:
  - name: auth-server
    base-url: http://localhost:8081
    apps:
      - name: auth-app
        addr: ":8081"
        services: [user-service, auth-service]
        middlewares: [logger]

  - name: business-server
    base-url: http://localhost:8082
    apps:
      - name: business-app
        addr: ":8082"
        services: [order-service, cart-service]
        middlewares: [logger]

  - name: payment-server
    base-url: http://localhost:8083
    apps:
      - name: payment-app
        addr: ":8083"
        services: [payment-service, invoice-service]
        middlewares: [logger]

# Note: When running with -server all, all 3 servers start in same process
# All service calls are still in-process (no HTTP), just different ports
