# Service Configuration with Path Prefix

configs:
  - name: database_dsn
    value: "postgres://user:pass@localhost/db"
  - name: jwt_secret
    value: "super-secret-key"

# Services with path-prefix configuration
services:
  # User Service
  - name: user-service
    type: UserService
    enable: true
    path-prefix: "/api/v1/users"  # Custom prefix for user endpoints
    config:
      database_dsn: "postgres://user:pass@localhost/db"
      
  # Auth Service  
  - name: auth-service
    type: AuthService
    enable: true
    path-prefix: "/api/v1/auth"   # Custom prefix for auth endpoints
    config:
      jwt_secret: "super-secret-key"
      token_expiry: 3600
      user-service: "user-service"  # Dependency reference
      
  # Order Service
  - name: order-service
    type: OrderService
    enable: true
    path-prefix: "/api/v1/orders" # Custom prefix for order endpoints
    config:
      user-service: "user-service"
      payment-service: "payment-service"

# Routers configuration (independent of services)
routers:
  - name: user-api
    path-prefix: "/api/v1"
    middlewares: ["cors", "logging"]
    
  - name: auth-api  
    path-prefix: "/auth"
    middlewares: ["cors", "rate-limit"]
    
  - name: admin-api
    path-prefix: "/admin"
    middlewares: ["cors", "auth", "logging"]

middlewares:
  - name: cors
    type: CorsMiddleware
    enable: true
    config:
      allowed_origins: ["*"]
      
  - name: logging
    type: RequestLogger
    enable: true
    
  - name: rate-limit
    type: RateLimit
    enable: true
    config:
      requests_per_minute: 100

servers:
  - name: api-server
    baseUrl: "http://localhost:8080"
    deployment-id: "production"
    apps:
      - name: main-app
        addr: ":8080"
        routers: ["user-api", "auth-api"]
        services: ["user-service", "auth-service"]  # Services hosted by this app
        
  - name: admin-server
    baseUrl: "http://localhost:8081"
    deployment-id: "production" 
    apps:
      - name: admin-app
        addr: ":8081"
        routers: ["admin-api"]
        services: ["order-service"]  # Order service on admin server