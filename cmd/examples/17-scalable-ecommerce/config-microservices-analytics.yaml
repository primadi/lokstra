# Microservices Deployment - Analytics Service
# Data analytics and reporting service

configs:
  - name: deployment-type
    value: "microservices"
  - name: service-name
    value: "analytics-service"
  - name: product-service-url
    value: "${PRODUCT_SERVICE_URL:http://localhost:8081}"
  - name: user-service-url
    value: "${USER_SERVICE_URL:http://localhost:8083}"
  - name: payment-service-url
    value: "${PAYMENT_SERVICE_URL:http://localhost:8084}"
  - name: cors-origins
    value: "${CORS_ORIGINS:*}"
  - name: rate-limit-rps
    value: 100   # Lower rate for analytics queries
  - name: cache-ttl-seconds
    value: 1800  # Very long cache for analytics data
  - name: enable-cache
    value: true
  - name: database-url
    value: "${ANALYTICS_DB_URL:postgres://localhost:5432/analytics}"
  - name: database-pool-size
    value: 20    # Larger pool for analytics queries
  - name: redis-url
    value: "${ANALYTICS_REDIS_URL:redis://localhost:6379/4}"

middlewares:
  - name: logging
    type: logging
  - name: cors
    type: cors
  - name: auth
    type: auth
  - name: rate-limit
    type: rate-limit
  - name: cache
    type: cache

services:
  - name: database
    type: database
  - name: redis
    type: redis
  # Business services - will use HTTP clients in microservices
  - name: product-service
    type: product-service
  - name: user-service
    type: user-service
  - name: payment-service
    type: payment-service
  - name: analytics-service
    type: analytics-service

routers:
  - name: analytics-api
    use: [logging, cors, auth, cache]
    routes:
      - name: get-analytics
        use: [cache]  # Heavy caching for analytics

servers:
  - name: analytics-service
    listen: "${ANALYTICS_PORT:8085}"
    services: [database, redis, product-service, user-service, payment-service, analytics-service]
    apps:
      - name: analytics-app
        addr: "/"
        routers: [analytics-api]